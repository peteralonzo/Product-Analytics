CREATE OR REPLACE TRANSIENT TABLE USER_DB.AD1_PA08042.RENEWAL_ZONE AS
(
    WITH full_data AS
    (
        SELECT DISTINCT POLICY_NUM, TO_CHAR (EVENT_DAY, 'MON-YYYY') AS EVENT_DAY
        FROM PRD_DGTL_DB.APP_TAS_DM.VW_ALIAS_PERSONAL_LINES_PROD_EVENTS
        WHERE WEB_SITE_IDENTIFIER = 'newco-service'
        AND APP_USER_ACCESS_ROLE_DESC_EVENT = 'consumer'
        AND EVENT_DAY BETWEEN '2025-01-01' AND '2025-03-31'
        AND INTERNAL_TRAFFIC = 'false'
        AND SESSION_ID IN (
        SELECT DISTINCT SESSION_ID
        FROM PRD_DGTL_DB.APP_TAS_DM.VW_ALIAS_PERSONAL_LINES_PROD_EVENTS
        WHERE WEB_SITE_IDENTIFIER = 'newco-service'
        AND APP_USER_ACCESS_ROLE_DESC_EVENT = 'consumer'
        AND EVENT_DAY BETWEEN '2025-01-01' AND '2025-03-31'
        AND INTERNAL_TRAFFIC = 'false'
        AND (EVENT_ID IN ('renewalzoneflow','readyforyourupcomingrenewalpopup','renewalzonetilebtn','reviewthedetailsbtn')
        OR PAGE_NAME = 'renewalzonedashboard'
        OR EVENT_DETAIL = 'learnmoreaboutmyrate'))
    ),
    
    /* Gets all records with only one POL_ID */
    single_record AS
    (
        SELECT DISTINCT POLICY_NUM, EVENT_DAY 
        FROM full_data
        WHERE LENGTH(POLICY_NUM) <= 12
    ),
    
    /* Removes random commas from those records */
    comma_fix AS
    (
        SELECT SUBSTR(POLICY_NUM, 1, 11) AS POL_ID, EVENT_DAY 
        FROM single_record
    ),
    
    /* Gathers records with QCNs and/or multiple POL_IDs */
    multiple_records AS
    (
        SELECT DISTINCT POLICY_NUM, EVENT_DAY 
        FROM full_data
        WHERE LENGTH(policy_num) > 12
    ),

    /* Removes QCN's and turns each POL_ID into its own row */
    fixed_records AS
    (
        SELECT DISTINCT TRIM(value) AS POL_ID, EVENT_DAY
        FROM multiple_records, LATERAL FLATTEN(input => SPLIT(POLICY_NUM, ',')) AS split_parts
        WHERE value NOT LIKE '%ph%' AND value NOT LIKE '%pa%'
        ORDER BY EVENT_DAY ASC
    ),
    
    /* Joins clean rows back together and removes records with no POL_ID */
    joined_table AS
    (
        SELECT * FROM fixed_records
        UNION
        SELECT * FROM comma_fix
    )
    
    SELECT DISTINCT POL_ID, MAX(EVENT_DAY) AS EVENT_DAY FROM joined_table
    WHERE POL_ID <> ''
    GROUP BY POL_ID
);

DROP TABLE USER_DB.AD1_PA08042.RENEWAL_ZONE;
SELECT * FROM USER_DB.AD1_PA08042.RENEWAL_ZONE;


WITH full_table AS
(
    SELECT POL_ID,
    ap.POL_EFF_DT,
    CASE WHEN POL_ID IN (SELECT POL_ID FROM USER_DB.AD1_PA08042.RENEWAL_ZONE) THEN 'Y'
         ELSE 'N' END AS RENEWAL_ZONE_IND,
    rz.EVENT_DAY,
    ap.ATR_E_FLAT,
    ap.ATR_E_30,
    ap.ATR_E_60,
    ap.ATR_E_90,
    ap.CANCEL_E_FLAT,
    ap.CANCEL_E_30,
    ap.CANCEL_E_60,
    ap.CANCEL_E_90,
    ap.CANCEL_FLAG
    FROM DSC_PLBI_DB.APP_AUTO_PRD.AUTO_PERSISTENCY_COMBINED AS ap
    LEFT JOIN USER_DB.AD1_PA08042.RENEWAL_ZONE AS rz
    USING (POL_ID)
    WHERE NEWCO_IND = 'Y' AND POL_EFF_DT BETWEEN '2025-03-01' AND '2025-03-31'
    QUALIFY MIN(POL_EFF_DT) OVER (PARTITION BY ap.POL_ID) = POL_EFF_DT
)

-- E+0 Monthly Data
SELECT RENEWAL_ZONE_IND, CASE 
WHEN ATR_E_FLAT = 1 AND CANCEL_E_FLAT = 0 THEN 'Active'
WHEN ATR_E_FLAT = 1 AND CANCEL_E_FLAT = 1 THEN 'Cancel'
WHEN ATR_E_FLAT = 0 AND CANCEL_E_FLAT = 0 AND CANCEL_FLAG = 1 THEN 'Cancel'
ELSE 'Pending' END AS STATUS,
COUNT(DISTINCT POL_ID) AS E_0
FROM full_table
/* October */
WHERE POL_EFF_DT BETWEEN '2024-10-01' AND '2024-10-31'
/* November */
WHERE POL_EFF_DT BETWEEN '2024-11-01' AND '2024-11-30'
/* December */
WHERE POL_EFF_DT BETWEEN '2024-12-01' AND '2024-12-31'
/* January */
WHERE POL_EFF_DT BETWEEN '2025-01-01' AND '2025-01-31'
/* February */
WHERE POL_EFF_DT BETWEEN '2025-02-01' AND '2025-02-28'
/* March */
WHERE POL_EFF_DT BETWEEN '2025-03-01' AND '2025-03-31'
GROUP BY RENEWAL_ZONE_IND, STATUS ORDER BY RENEWAL_ZONE_IND DESC, STATUS;



-- E+30 Monthly Data
SELECT RENEWAL_ZONE_IND, CASE 
WHEN ATR_E_30 = 1 AND CANCEL_E_30 = 0 THEN 'Active'
WHEN ATR_E_30 = 1 AND CANCEL_E_30 = 1 THEN 'Cancel'
WHEN ATR_E_30 = 0 AND CANCEL_E_30 = 0 AND CANCEL_FLAG = 1 THEN 'Cancel'
ELSE 'Pending' END AS STATUS,
COUNT(DISTINCT POL_ID) AS E_30
FROM full_table
/* October */
WHERE POL_EFF_DT BETWEEN '2024-10-01' AND '2024-10-31'
/* November */
WHERE POL_EFF_DT BETWEEN '2024-11-01' AND '2024-11-30'
/* December */
WHERE POL_EFF_DT BETWEEN '2024-12-01' AND '2024-12-31'
/* January */
WHERE POL_EFF_DT BETWEEN '2025-01-01' AND '2025-01-31'
/* February */
WHERE POL_EFF_DT BETWEEN '2025-02-01' AND '2025-02-28'
/* March */
WHERE POL_EFF_DT BETWEEN '2025-03-01' AND '2025-03-31'
GROUP BY RENEWAL_ZONE_IND, STATUS ORDER BY RENEWAL_ZONE_IND DESC, STATUS;



-- E+60 Monthly Data
SELECT RENEWAL_ZONE_IND, CASE 
WHEN ATR_E_60 = 1 AND CANCEL_E_60 = 0 THEN 'Active'
WHEN ATR_E_60 = 1 AND CANCEL_E_60 = 1 THEN 'Cancel'
WHEN ATR_E_60 = 0 AND CANCEL_E_60 = 0 AND CANCEL_FLAG = 1 THEN 'Cancel'
ELSE 'Pending' END AS STATUS,
COUNT(DISTINCT POL_ID) AS E_60
FROM full_table
/* October */
WHERE POL_EFF_DT BETWEEN '2024-10-01' AND '2024-10-31'
/* November */
WHERE POL_EFF_DT BETWEEN '2024-11-01' AND '2024-11-30'
/* December */
WHERE POL_EFF_DT BETWEEN '2024-12-01' AND '2024-12-31'
/* January */
WHERE POL_EFF_DT BETWEEN '2025-01-01' AND '2025-01-31'
/* February */
WHERE POL_EFF_DT BETWEEN '2025-02-01' AND '2025-02-28'
/* March */
WHERE POL_EFF_DT BETWEEN '2025-03-01' AND '2025-03-31'
GROUP BY RENEWAL_ZONE_IND, STATUS ORDER BY RENEWAL_ZONE_IND DESC, STATUS;



-- E+90 Monthly Data
SELECT RENEWAL_ZONE_IND, CASE 
WHEN ATR_E_90 = 1 AND CANCEL_E_90 = 0 THEN 'Active'
WHEN ATR_E_90 = 1 AND CANCEL_E_90 = 1 THEN 'Cancel'
WHEN ATR_E_90 = 0 AND CANCEL_E_90 = 0 AND CANCEL_FLAG = 1 THEN 'Cancel'
ELSE 'Pending' END AS STATUS,
COUNT(DISTINCT POL_ID) AS E_90
FROM full_table
/* October */
WHERE POL_EFF_DT BETWEEN '2024-10-01' AND '2024-10-31'
/* November */
WHERE POL_EFF_DT BETWEEN '2024-11-01' AND '2024-11-30'
/* December */
WHERE POL_EFF_DT BETWEEN '2024-12-01' AND '2024-12-31'
/* January */
WHERE POL_EFF_DT BETWEEN '2025-01-01' AND '2025-01-31'
/* February */
WHERE POL_EFF_DT BETWEEN '2025-02-01' AND '2025-02-28'
/* March */
WHERE POL_EFF_DT BETWEEN '2025-03-01' AND '2025-03-31'
GROUP BY RENEWAL_ZONE_IND, STATUS ORDER BY RENEWAL_ZONE_IND DESC, STATUS;