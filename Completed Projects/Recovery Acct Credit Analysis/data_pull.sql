WITH joined AS
(
    SELECT RAW.*,
    AP.NEWCO_IND,
    AP.POL_EFF_DT,
    AP.ATR_E_FLAT,
    AP.CANCEL_E_FLAT,
    AP.CANCEL_FLAG
    FROM USER_DB.AD1_PA08042.RECOVERY_RAW_DATA AS RAW
    JOIN DSC_PLBI_DB.APP_AUTO_PRD.AUTO_PERSISTENCY_COMBINED AS AP
    ON CAST(RAW.POL_ID AS VARCHAR) = CAST(AP.POL_ID AS VARCHAR)
    QUALIFY MAX(POL_EFF_DT) OVER (PARTITION BY AP.POL_ID) = POL_EFF_DT
),

prevail_book AS
(
    SELECT * FROM DSC_PLBI_DB.APP_AUTO_PRD.AUTO_PERSISTENCY_COMBINED
    WHERE NEWCO_IND = 'Y' AND POL_EFF_DT >= DATEADD(MONTH, -6, GETDATE())
    QUALIFY MAX(POL_EFF_DT) OVER (PARTITION BY POL_ID) = POL_EFF_DT
)

SELECT
-- CASE WHEN POL_ACCT_CR_IND = 1 THEN 'Y' ELSE 'N' END AS ACCT_CR_IND,
CASE 
WHEN ATR_E_FLAT = 1 AND CANCEL_E_FLAT = 0 THEN 'Active'
WHEN ATR_E_FLAT = 1 AND CANCEL_E_FLAT = 1 THEN 'Cancel'
WHEN ATR_E_FLAT = 0 AND CANCEL_E_FLAT = 0 AND CANCEL_FLAG = 1 THEN 'Cancel'
ELSE 'Pending' END AS STATUS,
COUNT(DISTINCT POL_ID) AS CNT
FROM joined
WHERE TAB_ORIGIN = 'Overcharged' AND POL_EFF_DT <= '2025-01-31'
GROUP BY STATUS
ORDER BY STATUS

-- SELECT * FROM USER_DB.AD1_PA08042.RECOVERY_RAW_DATA
-- WHERE TAB_ORIGIN = 'Canceled' AND POL_ID NOT IN
-- (
-- SELECT POL_ID FROM USER_DB.AD1_PA08042.RECOVERY_RAW_DATA
-- WHERE TAB_ORIGIN = 'Overcharged'
-- )

-- status_bo AS
-- (
-- SELECT *,
-- --CASE WHEN POL_ACCT_CR_IND = 1 THEN 'Y' ELSE 'N' END AS ACCT_CR_IND,
-- CASE 
-- WHEN ATR_E_FLAT = 1 AND CANCEL_E_FLAT = 0 THEN 'Active'
-- WHEN ATR_E_FLAT = 1 AND CANCEL_E_FLAT = 1 THEN 'Cancel'
-- WHEN ATR_E_FLAT = 0 AND CANCEL_E_FLAT = 0 AND CANCEL_FLAG = 1 THEN 'Cancel'
-- ELSE 'Pending' END AS STATUS
-- FROM joined
-- )

-- SELECT MIN(POL_EFF_DT), MAX(POL_EFF_DT)
-- FROM status_bo
-- WHERE TAB_ORIGIN = 'Undercharged' AND STATUS = 'Pending'