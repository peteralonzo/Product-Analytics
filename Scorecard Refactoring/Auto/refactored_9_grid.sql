WITH response_state AS -- Gathers # of responses by state
(
    SELECT CONCAT('Response', RISK_ST_ABBR) AS Key,
    TRUNC(SUM(CASE WHEN DATEDIFF(DAY,TRANS_DT,SYSDATE()) <= 90 THEN RESP_IND_CNT ELSE 0 END), 0) AS "90days"
    FROM "PRD_PL_DB"."APP_DCPA_DM"."AUTO_QUOTE_LATST_VW" 
    WHERE BU_ABBR ='AARP' AND RISK_ST_ABBR IS NOT NULL AND ORIG_QTE_CNTCT_METH_CD = 'P'
    GROUP BY Key
    UNION ALL
    
    SELECT CONCAT('Response',RISK_STATE_ABBR) AS Key,
    TRUNC(SUM(CASE WHEN DATEDIFF(DAY,QUOTE_LAST_TRANSACTION_DT,SYSDATE()) <= 90 THEN RESPONSE_IND_CNT ELSE 0 END), 0) AS "90days"
    FROM "DSC_PLBI_DB"."APP_AUTO_PRD"."AUTO_QUOTE_FLOW_SCDI_MODEL_VW" 
    WHERE BUS_UNIT_ABBR = 'AARP' AND ORIG_QUOTE_PROCESS_METH_CD = 'T' 
    GROUP BY Key
),

issues_state AS -- Gathers # of issues by state
(
    SELECT CONCAT('Issues',RISK_ST_ABBR) AS Key,
    TRUNC(SUM(CASE WHEN DATEDIFF(DAY,TRANS_DT,SYSDATE())<=90 THEN ISSUE_IND_CNT ELSE 0 END),0) AS "90days",
    FROM "PRD_PL_DB"."APP_DCPA_DM"."AUTO_QUOTE_LATST_VW" 
    WHERE BU_ABBR ='AARP' AND RISK_ST_ABBR IS NOT NULL AND ORIG_QTE_CNTCT_METH_CD = 'P'
    GROUP BY Key
    UNION ALL

    SELECT CONCAT('Issues',RISK_STATE_ABBR) AS Key,
    TRUNC(SUM(CASE WHEN DATEDIFF(DAY,QUOTE_LAST_TRANSACTION_DT,SYSDATE())<=90 THEN ISSUE_IND_CNT ELSE 0 END),0) AS "90days",
    FROM "DSC_PLBI_DB"."APP_AUTO_PRD"."AUTO_QUOTE_FLOW_SCDI_MODEL_VW" 
    WHERE BUS_UNIT_ABBR = 'AARP' AND ORIG_QUOTE_PROCESS_METH_CD = 'T' 
    GROUP BY Key
),

response_countrywide AS -- Gathers # of responses countrywide
(
    SELECT CONCAT('Response','CW') AS Key,
    TRUNC(SUM(CASE WHEN DATEDIFF(DAY,TRANS_DT,SYSDATE())<=90 THEN RESP_IND_CNT ELSE 0 END),0) AS "90days",
    FROM "PRD_PL_DB"."APP_DCPA_DM"."AUTO_QUOTE_LATST_VW" 
    WHERE BU_ABBR ='AARP' AND RISK_ST_ABBR IS NOT NULL AND ORIG_QTE_CNTCT_METH_CD = 'P'
    GROUP BY Key
    UNION ALL
    
    SELECT CONCAT('Response','CW') AS Key,
    TRUNC(SUM(CASE WHEN DATEDIFF(DAY,QUOTE_LAST_TRANSACTION_DT,SYSDATE())<=90 THEN RESPONSE_IND_CNT ELSE 0 END),0) AS "90days",
    FROM "DSC_PLBI_DB"."APP_AUTO_PRD"."AUTO_QUOTE_FLOW_SCDI_MODEL_VW" 
    WHERE BUS_UNIT_ABBR = 'AARP' AND ORIG_QUOTE_PROCESS_METH_CD = 'T' 
    GROUP BY Key
),

issues_countrywide AS -- Gathers # of issues Countrywide
(
    SELECT 'IssuesCW' AS Key,
    TRUNC(SUM(CASE WHEN DATEDIFF(DAY,TRANS_DT,SYSDATE())<=90 THEN ISSUE_IND_CNT ELSE 0 END),0) AS "90days",
    FROM "PRD_PL_DB"."APP_DCPA_DM"."AUTO_QUOTE_LATST_VW" 
    WHERE BU_ABBR ='AARP' AND RISK_ST_ABBR IS NOT NULL AND ORIG_QTE_CNTCT_METH_CD = 'P'
    GROUP BY Key
    UNION ALL
    
    SELECT 'IssuesCW' AS Key,
    TRUNC(SUM(CASE WHEN DATEDIFF(DAY,QUOTE_LAST_TRANSACTION_DT,SYSDATE())<=90 THEN ISSUE_IND_CNT ELSE 0 END),0) AS "90days",
    FROM "DSC_PLBI_DB"."APP_AUTO_PRD"."AUTO_QUOTE_FLOW_SCDI_MODEL_VW" 
    WHERE BUS_UNIT_ABBR = 'AARP' AND ORIG_QUOTE_PROCESS_METH_CD = 'T' 
    GROUP BY Key
),

e_60_state AS -- Gathers E+60 Persistency by state
(
    SELECT CONCAT('E+60 R',RISK_STATE) AS Key,
    1-(Div0null((SUM(CASE WHEN DATEDIFF(Day,POL_EFF_DT,SYSDATE())<=150 THEN CANCEL_E_60 ELSE 0 END)), 
    (SUM(CASE WHEN DATEDIFF(Day,POL_EFF_DT,SYSDATE())<=150 THEN ATR_E_60 ELSE 0 END)))) AS "90days"
    FROM "DSC_PLBI_DB"."APP_AUTO_PRD"."PERSISTENCY_COMBINED"  
    WHERE POL_NEW_RENEW_CD = 'R' AND BUS_UNIT_ABBR = 'AARP' AND LOB = 'AUTO' AND ATR_E_60 = 1
    GROUP BY Key
),

e_60_countrywide AS -- Gathers E+60 Persistency Countrywide
(
    SELECT 'E+60 RCW' AS Key,
    1-(Div0null((SUM(CASE WHEN DATEDIFF(Day,POL_EFF_DT,SYSDATE())<=150 THEN CANCEL_E_60 ELSE 0 END)), 
    (SUM(CASE WHEN DATEDIFF(Day,POL_EFF_DT,SYSDATE())<=150 THEN ATR_E_60 ELSE 0 END)))) AS "90days"
    FROM "DSC_PLBI_DB"."APP_AUTO_PRD"."PERSISTENCY_COMBINED"
    WHERE POL_NEW_RENEW_CD = 'R' AND BUS_UNIT_ABBR = 'AARP' AND LOB = 'AUTO' AND ATR_E_60 = 1
    GROUP BY Key
)

SELECT KEY, SUM("90days") AS "90Day", TO_CHAR(SYSDATE(),'MM-DD-YYYY') AS AS_OF
FROM 
(
    SELECT * FROM response_state
    UNION ALL
    SELECT * FROM issues_state
    UNION ALL 
    SELECT * FROM response_countrywide
    UNION ALL
    SELECT * FROM issues_countrywide
    UNION ALL
    SELECT * FROM e_60_state
    UNION ALL
    SELECT * FROM e_60_countrywide
)
GROUP BY KEY
ORDER BY KEY